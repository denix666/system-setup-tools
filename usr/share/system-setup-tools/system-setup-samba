#! /bin/bash
#
# Copyright Â© 2001 - 2012 Denis Salmanovich denis.salmanovich@gmail.com
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#

[ -f /etc/denix-colors ] && . /etc/denix-colors

# Check system version
[ -f /etc/fedora-release ] && system_ver=`cat /etc/fedora-release | head -1 | awk '{print $3}'`
if ! [ $system_ver = "18" -o $system_ver = "19" -o $system_ver = "20" ]; then
    $color_Red
    echo "Not supported platform!"
    echo "Exiting..."
    $color_Off
    exit 1
fi

# Check if script runs under root
if ! [ "$(whoami)" = "root" ]; then
    echo "You have to run me with root user priveleges!"
    exit 1
fi

# Check SELinux configuration
if [ -f /etc/selinux/config ]; then
    . /etc/selinux/config
    if ! [ "${SELINUX}" = "disabled" ]; then
	echo "WARNING!"
	echo "~~~~~~~~"
	echo -n "The SELINUX has been set to ${SELINUX}. Do you want to disable it? (Y/n)?"; read USERINPUT
	if [ "${USERINPUT}" = "" -o "${USERINPUT}" = "y" -o "${USERINPUT}" = "Y" ]; then
	    sed -i 's/^SELINUX=.*$/SELINUX=disabled/g' /etc/selinux/config
	    setenforce 0
	fi
	fi
	. /etc/selinux/config
	if [ "${SELINUX}" = "disabled" ]; then
	    chkconfig restorecond off >/dev/null 2>&1
	    chkconfig setroubleshoot off >/dev/null 2>&1
    fi
fi


# Get the system NETBIOS NAME
SYSTEM_NBTNAME=`hostname | cut -d. -f1`

# Check if user want to use the system NBTNAME or any other
while [ "${NBTNAME}" = "" ]; do
    echo -n "Enter NETBIOS name for samba server [${SYSTEM_NBTNAME}]: "; read NBTNAME
    if [ "${NBTNAME}" = "" ]; then
	NBTNAME="${SYSTEM_NBTNAME}"
    fi
    if [ ${#NBTNAME} -gt 8 ]; then
	echo "WARNING! The NETBIOS name longest than 8 characters!"
	echo -n "Are you sure want to use it anyway [Y/n]?"; read USERINPUT
	if [ "${USERINPUT}" = "n" ]; then
	    NBTNAME=""
	fi
    fi
done

# Install samba packages
pk="cups-libs samba samba-common samba-client firewalld"
for i in $pk; do
    if ! rpm -q $i >/dev/null 2>&1; then
	required_packages="$required_packages $i"
    fi
done

if ! [ "$required_packages" = "" ]; then
    $color_Purple
    echo "Some packages not found on your system. Trying to download and install..."
    if ! yum -y install $required_packages; then
        $color_BRed
        echo "Download failed! Check internet connection and try again!"
        $color_Off
        exit 1
    else
        $color_Green
        echo "Installation success!"
        $color_Off
    fi
fi

# Stop the services for installation
systemctl stop smb >/dev/null 2>&1

# Check, if configuration file already exists, then backup it
if [ -f /etc/samba/smb.conf ]; then
    cp /etc/samba/smb.conf /etc/samba/smb.conf.back.`date +%Y%m%d%H%M`
fi

# Create directoriess of netlogon and public access
install -m 777 -d /srv/samba/shares/public

# Create new samba configuration file
cat > /etc/samba/smb.conf << EOF
[global]
    netbios name                = ${NBTNAME}
    workgroup                   = workgroup
    server string               = %h
    logon home                  = \\\\%L\\%U
    security                    = user
    passdb backend              = tdbsam
    vfs objects	                = full_audit
    full_audit:prefix           = %u|%I
    full_audit:failure          = connect opendir
    full_audit:success          = connect opendir mkdir rmdir read pread write pwrite sendfile rename unlink
    full_audit:facility         = local5
    full_audit:priority         = notice

[homes]
    comment                     = Home Directories
    valid users                 = %S
    browseable                  = no
    writable                    = yes
    create mask                 = 0600
    directory mask              = 0700

[public]
    comment                     = Public Directory
    path                        = /srv/samba/shares/public
    create mask                 = 0777
    directory mask              = 0777
    read only                   = no
    browseable                  = yes
    writable                    = yes
EOF


# Check filewall ports
if ! firewall-cmd --permanent --query-service=samba; then
    $color_Red
    echo "The SAMBA service ports is closed in your firewall!"
    $color_Cyan
    echo -n "Do you want to open them now? (Y/n)?"; read USERINPUT
    $color_Off
    if [ "${USERINPUT}" = "" -o "${USERINPUT}" = "y" -o "${USERINPUT}" = "Y" ]; then
	firewall-cmd --permanent --add-service=samba
	firewall-cmd --reload
	$color_BGreen
	echo "The SAMBA service ports where opened in your firewall!!!"
	$color_Off
    else
	$color_BRed
	echo "The SAMBA service ports where not been opened in your firewall!!!"
	$color_Off
    fi
fi

# Enable samba daemon
systemctl enable smb >/dev/null 2>&1

# Start samba server
systemctl start smb >/dev/null 2>&1

# Create installation signature
if ! [ -d /var/lib/system-setup-tools ]; then
    install -d /var/lib/system-setup-tools
fi
echo "Install date: `date`" > /var/lib/system-setup-tools/samba

$color_BGreen
echo
echo "Setup completed!"
$color_Off
