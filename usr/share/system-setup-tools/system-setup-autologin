#! /bin/bash
#
# Copyright Â© 2001 - 2012 Denis Salmanovich denis.salmanovich@gmail.com
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#

[ -f /etc/denix-colors ] && . /etc/denix-colors

# Check system version
[ -f /etc/fedora-release ] && system_ver=`cat /etc/fedora-release | head -1 | awk '{print $3}'`
if ! [ $system_ver = "17" -o $system_ver = "18" -o $system_ver = "19" ]; then
    $color_Red
    echo "Not supported platform!"
    echo "Exiting..."
    $color_Off
    exit 1
fi

# Check if script runs under root
if ! [ "$(whoami)" = "root" ]; then
    echo "You have to run me with root user priveleges!"
    exit 1
fi

# kdmrc file
kdmrc_file="/etc/kde/kdm/kdmrc"

# Check which display manager in use
if ! [ -f ${kdmrc_file} ]; then
    echo "KDM display manager is not found."
    echo "Exiting..."
    exit 0
fi

# Get the user arguments
########################
for i in $*; do
    case $i in
	--remove)
	    # Remove autologin configuration and exit
	    sed -i '/^AutomaticLogin.*$/d' ${mdm_custom}
	    exit 0
	    ;;
    esac
done

# Search the users in the system
found_user=`cat /etc/passwd | awk -F':' '$3 >999' | grep '/bin/bash' | awk -F':' '{print $1}' | head -1`

if [ "${found_user}" = "" ]; then
    $color_Red
    echo
    echo "Not found regular users in your system!"
    echo "Add user, and then run me again!"
    echo "Exiting..."
    echo
    $color_Off
    exit 1
fi

while [ "${auto_login}" = "" ]; do
    $color_Green
    echo -n "Enter username for autologin [${found_user}]: "; read auto_login
    $color_Off
    if [ "${auto_login}" = "" ]; then
	auto_login="${found_user}"
    fi
    # Check if user exists in the system
    result=`cat /etc/passwd | grep '/bin/bash' | cut -d':' -f1 | grep ${auto_login}`
    if [ "${result}" = "" ]; then
	echo "The user ${auto_login} not present or disabled in your system!"
	echo "Please choose other user!"
	auto_login=""
    fi
done

$color_BYellow
echo
echo -n "Installing autologin for user ${auto_login}..."

result=`cat ${mdm_custom} | grep ^'AutomaticLogin=' | cut -d'=' -f1`
if [ "$result" = "AutomaticLogin" ]; then
    sed -i 's/^AutomaticLogin=.*$/AutomaticLogin='$auto_login'/g' ${mdm_custom}
else
    sed -i '/^\[daemon\]/a AutomaticLogin='$auto_login ${mdm_custom}
fi

result=`cat ${mdm_custom} | grep ^'AutomaticLoginEnable=' | cut -d'=' -f1`
if [ "$result" = "AutomaticLoginEnable" ]; then
    sed -i 's/^AutomaticLoginEnable=.*$/AutomaticLoginEnable=true/g' ${mdm_custom}
else
    sed -i '/^\[daemon\]/a AutomaticLoginEnable=true' ${mdm_custom}
fi

$color_BGreen
echo " done"
$color_Off

$color_White
echo
echo -n "To remove autologin please run: "
$color_BRed
echo "system-setup-autologin --remove"
echo
$color_Off

# Create installation signature
if ! [ -d /var/lib/system-setup-tools ]; then
    install -d /var/lib/system-setup-tools
fi
echo "Install date: `date`" > /var/lib/system-setup-tools/autologin

$color_BGreen
echo "Setup completed!"
$color_Off
